prometheus:
  prometheusSpec:
    externalLabels:
      env: {{ .Values.clusterEnv }}
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ .Values.storageClass }} 
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: {{ .Values.prometheusStorageSize }}
grafana:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      release: greg-prom
alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
    inhibit_rules:
      - source_matchers:
          - "severity = critical"
        target_matchers:
          - "severity =~ warning|info"
        equal:
          - "namespace"
          - "alertname"
      - source_matchers:
          - "severity = warning"
        target_matchers:
          - "severity = info"
        equal:
          - "namespace"
          - "alertname"
      - source_matchers:
          - "alertname = InfoInhibitor"
        target_matchers:
          - "severity = info"
        equal:
          - "namespace"
    route:
      group_by: ["namespace", "job", "severity"]

      # When a new group of alerts is created by an incoming alert, wait at
      # least 'group_wait' to send the initial notification.
      # This way ensures that you get multiple alerts for the same group that start
      # firing shortly after another are batched together on the first
      # notification.
      group_wait: 30s

      # When the first notification was sent, wait 'group_interval' to send a batch
      # of new alerts that started firing for that group.
      group_interval: 5m

      # If an alert has successfully been sent, wait 'repeat_interval' to
      # resend them.
      repeat_interval: 3h

      # The default receiver if no matches found.
      receiver: "null"

      routes:
        - matchers:
            - env=""
          continue: false

        - matchers:
            - severity="critical"
          # This is temporary, it should go to victorops
          receiver: slack

        - matchers:
            - severity="warning"
          receiver: slack

        - matchers:
            - severity="info"
          receiver: slack

        - matchers:
            - severity="none"
          receiver: slack
    receivers:
      - name: "null"

      - name: "slack"
        slack_configs:
          - channel: "#greg-alerts"
            api_url: "https://hooks.slack.com/services/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"

    templates:
      - "/etc/alertmanager/config/*.tmpl"
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ .Values.storageClass }}
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: {{ .Values.alertMgrStorageSize }}
